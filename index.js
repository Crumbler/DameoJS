var te=Object.defineProperty;var ie=(d,e,t)=>e in d?te(d,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):d[e]=t;var l=(d,e,t)=>ie(d,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();class y{static findById(e){const t=document.getElementById(e);if(t===null)throw new Error("Failed to find element with id "+e);return t}}class j{static addZeroForSingleDigit(e){return e<10?"0"+e:e.toString()}}class h{}l(h,"dropdownDialog","dropdown-dialog"),l(h,"restartDialog","restart-dialog"),l(h,"settingsDialog","settings-dialog"),l(h,"endDialog","end-dialog"),l(h,"settingsForm","settings-form"),l(h,"dropdownButton","dropdown-button"),l(h,"undoButton","undo-button"),l(h,"cycleButton","cycle-button"),l(h,"gameContainer","game-container"),l(h,"gameHeader","game-header"),l(h,"playerIndicator","player-indicator"),l(h,"gameTime","game-time"),l(h,"pieceCanvas","piece-canvas"),l(h,"cellCanvas","cell-canvas");const p=class p{static restart(){p.interval!==null&&clearInterval(p.interval),p.start=(Date.now()/1e3|0)-p.timeElapsed,p.interval=window.setInterval(p.update,1e3),p.update()}static getElapsedTime(){return(Date.now()/1e3|0)-p.start}static setElapsedTime(e){p.timeElapsed=e}static update(){const e=(Date.now()/1e3|0)-p.start,t=e/3600|0,i=e/60-t*60|0,s=e-t*3600-i*60;let n;t>0?n=`${t}:${j.addZeroForSingleDigit(i)}:${j.addZeroForSingleDigit(s)}`:n=`${i}:${j.addZeroForSingleDigit(s)}`,p.timerElement.textContent=n}static handleGameEvent(e){e.isGameResetEvent()&&(p.restart(),p.timeElapsed=0)}static registerEventHandler(e){e.registerEventHandler(p.handleGameEvent)}};l(p,"timerElement",y.findById(h.gameTime)),l(p,"timeElapsed",0),l(p,"start"),l(p,"interval",null);let I=p;const M=class M{};l(M,"CellsPerSide",8),l(M,"TotalWhitePieces",18),l(M,"TotalRedPieces",18),l(M,"TotalPieces",M.TotalWhitePieces+M.TotalRedPieces);let w=M;const m=class m{};l(m,"HeaderIconSize",70),l(m,"BoardSize",600),l(m,"CellSize",m.BoardSize/w.CellsPerSide),l(m,"PieceX",m.CellSize/2),l(m,"PieceY",m.CellSize*.6),l(m,"PieceWidth",m.CellSize*.75),l(m,"PieceHeight",m.CellSize*.2),l(m,"PieceLineWidth",m.CellSize*.03),l(m,"MsPerCell",250);let f=m;class g{}l(g,"Background","#362918"),l(g,"RhombusA","#ab9349"),l(g,"RhombusB","#ca9334"),l(g,"RedPieceA","rgb(60, 0, 0)"),l(g,"RedPieceB","red"),l(g,"WhitePieceA","rgb(60, 60, 60)"),l(g,"WhitePieceB","white"),l(g,"CrownColor","rgb(255, 255, 9)"),l(g,"SelectableCell","rgb(255, 247, 0)"),l(g,"SelectedCell","rgb(53, 255, 2)"),l(g,"ReachableCell","rgb(53, 255, 2)"),l(g,"PassedThroughCell","rgb(35, 109, 179)");class se{static smoothStep(e){return 3*e*e-2*e*e*e}}class u extends Array{constructor(e=0,t=0){super(),this[0]=e,this[1]=t}static fromScalar(e){return new u(e,e)}static length(e,t){const i=e.x-t.x,s=e.y-t.y;return Math.sqrt(i*i+s*s)}static fromJson(e){return new u(e.x,e.y)}toJson(){return{x:this.x,y:this.y}}distanceTo(e){return u.length(this,e)}equals(e){return this.x===e.x&&this.y===e.y}get x(){return this[0]}set x(e){this[0]=e}get y(){return this[1]}set y(e){this[1]=e}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}clone(){return this.slice()}add(e){return this.x+=e.x,this.y+=e.y,this}sub(e){return this.x-=e.x,this.y-=e.y,this}mul(e){return this.x*=e,this.y*=e,this}div(e){return this.x/=e,this.y/=e,this}toString(){return`(${this.x}, ${this.y})`}static sub(e,t){return new u(e.x-t.x,e.y-t.y)}}const A=class A{constructor(e,t,i){l(this,"_game");l(this,"_inputState");l(this,"_settings");l(this,"_pieceContext",y.findById(h.pieceCanvas).getContext("2d"));l(this,"_animationStart",null);l(this,"_animationEnd",null);l(this,"_animatedPiece",null);l(this,"_animatedMove",null);l(this,"_redPieceLowerGradient",A.createPieceLowerGradient(this._pieceContext,!1));l(this,"_whitePieceLowerGradient",A.createPieceLowerGradient(this._pieceContext,!0));l(this,"onAnimation",()=>{if(this._animationStart===null||this._animationEnd===null||this._animatedPiece===null||this._animatedMove===null)throw new Error("Animation info is not supposed to be null");const e=performance.now(),t=(e-this._animationStart)/(this._animationEnd-this._animationStart),i=Math.min(1,se.smoothStep(t));if(this.render(i),e>this._animationEnd){this.endAnimation();return}window.requestAnimationFrame(this.onAnimation)});this._game=e,this._settings=i,this._inputState=t,this.subscribeToEvents()}static createPieceLowerGradient(e,t){const i=f.CellSize,s=e.createLinearGradient(i*.1,i*.6,i*.9,i*.6);return s.addColorStop(0,t?g.WhitePieceA:g.RedPieceA),s.addColorStop(1,t?g.WhitePieceB:g.RedPieceB),s}static createCrownPath(){const e=new Path2D,t=f.CellSize,i=t/2,s=i,n=t*.02,o=t*.1,r=t*.27,c=r*.2,a=t*.07,S=t*.23,_=t*.16,P=t*.05;return e.moveTo(i-r/2,s+n),e.lineTo(i-r/2,s-P),e.lineTo(i-r/2-o,s-_),e.lineTo(i-c,s-P-a),e.lineTo(i,s-S),e.lineTo(i+c,s-P-a),e.lineTo(i+r/2+o,s-_),e.lineTo(i+r/2,s-P),e.lineTo(i+r/2,s+n),e.closePath(),e}renderCrown(){const e=this._pieceContext;e.fillStyle=g.CrownColor,e.fill(A._crownPath),e.strokeStyle="black",e.lineWidth=1.5,e.stroke(A._crownPath)}renderPiece(e){const t=f.CellSize,i=f.PieceX,s=f.PieceY,n=f.PieceWidth,o=f.PieceHeight,r=e?this._whitePieceLowerGradient:this._redPieceLowerGradient,c=e?g.WhitePieceB:g.RedPieceB,a=this._pieceContext;a.fillStyle=r,a.strokeStyle="black",a.lineWidth=f.PieceLineWidth,a.beginPath(),a.ellipse(i,s,n/2,t*.2,0,0,Math.PI*2),a.fill(),a.beginPath(),a.fillRect(i-n/2,s-o,n,o),a.fillStyle=c,a.beginPath(),a.ellipse(i,s-o,n/2,o,0,0,Math.PI*2),a.fill(),a.beginPath(),a.ellipse(i,s,n/2,o,0,0,Math.PI),a.stroke(),a.beginPath(),a.ellipse(i,s-o,n/2,o,0,0,Math.PI*2),a.stroke(),a.beginPath(),a.moveTo(i-n/2,s-o),a.lineTo(i-n/2,s),a.moveTo(i+n/2,s-o),a.lineTo(i+n/2,s),a.stroke()}endAnimation(){this._animationStart=null,this._animationEnd=null,this._animatedPiece=null,this._animatedMove=null,this._inputState.acceptingInput=!0}renderAnimatedPiece(e){const t=f.CellSize,i=this._pieceContext,s=this._animatedPiece,n=this._animatedMove,o=n.length,r=n.path;let c=0,a=r[0],S=r[1],_=0;for(let T=0;T<r.length-1;++T){if(_=r[T].distanceTo(r[T+1])/o,c+_>=e){a=r[T],S=r[T+1],_=(e-c)/_;break}c+=_}const P=u.sub(S,a),Q=a.x+P.x*_,ee=a.y+P.y*_;i.save(),i.translate(Q*t,ee*t),this.renderFullPiece(i,s),i.restore()}renderFullPiece(e,t){if((this._settings.current.flipRedPieces??!1)&&!t.isWhite){const s=f.CellSize;e.scale(1,-1),e.translate(0,-s)}this.renderPiece(t.isWhite),t.isPromoted&&this.renderCrown()}renderNormalPieces(){const e=f.CellSize,t=this._pieceContext;for(const i of this._game.pieces)i!==this._animatedPiece&&(t.save(),t.translate(i.pos.x*e,i.pos.y*e),this.renderFullPiece(t,i),t.restore())}render(e=0){this._pieceContext.clearRect(0,0,f.BoardSize,f.BoardSize),this.renderNormalPieces(),this._animatedPiece!==null&&this.renderAnimatedPiece(e)}handlePerformMove(e){this._animatedPiece=e[0],this._animatedMove=e[1],this._animationStart=performance.now(),this._animationEnd=this._animationStart+this._animatedMove.length*f.MsPerCell,this._inputState.acceptingInput=!1,window.requestAnimationFrame(this.onAnimation)}handleGameEvent(e){e.isPiecesChangedEvent()&&this.render()}subscribeToEvents(){this._game.registerEventHandler(e=>this.handleGameEvent(e)),this._inputState.subscribePerformMove(e=>this.handlePerformMove(e))}};l(A,"_crownPath",A.createCrownPath());let Y=A;const k=-1;class v{constructor(e,t,i=!1){l(this,"_isPromoted");l(this,"_pos");this.isWhite=e,v.checkCoordinate(t.x,"X"),v.checkCoordinate(t.y,"Y"),this._isPromoted=i,this._pos=t.clone()}static checkCoordinate(e,t){if(e!==(e|0))throw new Error(`${t} value ${e} is not an integer`);if(e<0||e>=w.CellsPerSide)throw new Error(`${t} coordinate must be in range [0, ${w.CellsPerSide-1}]`)}static fromJson(e){return new v(e.isWhite,u.fromJson(e.pos),e.isPromoted)}toJson(){return{isWhite:this.isWhite,isPromoted:this.isPromoted,pos:this._pos.toJson()}}get isPromoted(){return this._isPromoted}get pos(){return this._pos.clone()}moveTo(e){v.checkCoordinate(e.x,"X"),v.checkCoordinate(e.y,"Y"),this._pos=e.clone()}promote(){if(this._isPromoted)throw new Error("Piece already promoted");this._isPromoted=!0}demote(){if(!this._isPromoted)throw new Error("Piece cannot be demoted further");this._isPromoted=!1}get shouldBePromoted(){const e=this.isWhite?0:w.CellsPerSide-1;return this._pos.y===e&&!this._isPromoted}}var x=(d=>(d[d.Red=0]="Red",d[d.White=1]="White",d))(x||{});class H{constructor(e){l(this,"_type");this._type=e}isPlayerChangedEvent(){return this._type===0}isGameResetEvent(){return this._type===1}isPiecesChangedEvent(){return this._type===2}isCanUndoEvent(){return this._type===3}isGameEndEvent(){return this._type===4}}class ne extends H{constructor(){super(1)}}class oe extends H{constructor(e){super(0),this.player=e}}class le extends H{constructor(){super(2)}}class re extends H{constructor(e){super(3),this.canUndo=e}}class ae extends H{constructor(e){super(4),this.redWon=e}}class z{constructor(e,t=null){if(this.path=e,this.toRemove=t,e.length<2)throw new Error("Path must contain at least 2 points");if(t!==null&&t.length===0)throw new Error("toRemove array must have at least 1 piece if not null");for(const i of e)v.checkCoordinate(i.x,"X"),v.checkCoordinate(i.y,"Y")}get firstPoint(){return this.path[0]}get lastPoint(){return this.path[this.path.length-1]}get isAttackMove(){return this.toRemove!==null}get length(){let e=0;for(let t=0;t<this.path.length-1;++t)e+=this.path[t].distanceTo(this.path[t+1]);return e}}class ce{constructor(e,t){if(this.piece=e,this.moves=t,t.length===0)throw new Error("Moves may not be empty")}}class W{static getPawnMoveInDirection(e,t,i){const s=t.pos;s.add(i);let n=e.getCell(s);for(;n!==null&&n!==k&&n.isWhite===t.isWhite&&!n.isPromoted;)s.add(i),n=e.getCell(s);return n===null?new z([t.pos,s]):null}static addPawnMoves(e,t,i){const s=i.isWhite?-1:1,n=new u(0,s);for(let o=-1;o<=1;++o){n.x=o;const r=this.getPawnMoveInDirection(e,i,n);r!==null&&t.push(r)}}static addKingMovesInDirection(e,t,i,s){const n=t.pos,o=n.clone();o.add(s);let r=e.getCell(o.x,o.y);for(;r===null;)i.push(new z([n,o.clone()])),o.add(s),r=e.getCell(o)}static addKingMoves(e,t,i){for(const s of this.allDirections)this.addKingMovesInDirection(e,i,t,s)}static areOpposite(e,t){return e.x===-t.x&&e.y===-t.y}static calculateMoves(e,t){const i=[];return t.isPromoted?this.addKingMoves(e,i,t):this.addPawnMoves(e,i,t),i.length===0?null:i}static addPawnAttackMovesRec(e,t,i,s,n,o){let r=!1;for(const c of this.cardinalDirections){o.add(c);const a=e.getCell(o);if(a===null||a===k||a.isWhite===i.isWhite||n.includes(a)){o.sub(c);continue}o.add(c);const S=e.getCell(o);if(S!==null&&S!==i){o.sub(c).sub(c);continue}r=!0,n.push(a),s.push(o.clone()),this.addPawnAttackMovesRec(e,t,i,s,n,o),s.pop(),n.pop(),o.sub(c).sub(c)}r||t.push(new z(s.slice(),n.slice()))}static addPawnAttackMoves(e,t,i){const s=[],n=i.pos,o=[n.clone()];for(const r of this.cardinalDirections){n.add(r);const c=e.getCell(n);if(c===null||c===k||c.isWhite===i.isWhite){n.sub(r);continue}if(n.add(r),e.getCell(n)!==null){n.sub(r).sub(r);continue}s.push(c),o.push(n.clone()),this.addPawnAttackMovesRec(e,t,i,o,s,n),o.pop(),s.pop(),n.sub(r).sub(r)}}static addKingAttackMovesRec(e,t,i,s,n,o,r){if(!this.kingHasAttacksAlongLine(e,n,i,o,r)){this.kingAddStopsAlongLine(e,t,i,s,n,o,r);return}let c=0,a=null;do{for(const P of this.cardinalDirections)P===r||this.areOpposite(P,r)||this.tryAddKingAttackInDirection(e,t,i,s,n,o,P);o.add(r),++c,a=e.getCell(o)}while(a===null||a===i);if(a===k||a.isWhite===i.isWhite||n.includes(a)){o.x-=r.x*c,o.y-=r.y*c;return}o.add(r),++c;const S=e.getCell(o);(S===null||S===i)&&(n.push(a),this.addKingAttackMovesRec(e,t,i,s,n,o,r),n.pop()),o.x-=r.x*c,o.y-=r.y*c}static kingHasAttacksAlongLine(e,t,i,s,n){if(this.kingHasAttackInDirection(e,t,i,s,n))return!0;let o=null,r=0;for(;o===null||o===i;){for(const c of this.cardinalDirections)if(!(c===n||this.areOpposite(c,n))&&this.kingHasAttackInDirection(e,t,i,s,c))return s.x-=n.x*r,s.y-=n.y*r,!0;s.add(n),++r,o=e.getCell(s)}return s.x-=n.x*r,s.y-=n.y*r,!1}static kingHasAttackInDirection(e,t,i,s,n){let o=!1,r=0,c=null;do s.add(n),++r,c=e.getCell(s);while(c===null||c===i);if(c===k||c.isWhite===i.isWhite||t.includes(c))return s.x-=n.x*r,s.y-=n.y*r,!1;s.add(n),++r;const a=e.getCell(s);return o=a===null||a===i,s.x-=n.x*r,s.y-=n.y*r,o}static kingAddStopsAlongLine(e,t,i,s,n,o,r){let c=0,a=e.getCell(o);do s.push(o.clone()),t.push(new z(s.slice(),n.slice())),s.pop(),++c,o.add(r),a=e.getCell(o);while(a===null||a===i);o.x-=r.x*c,o.y-=r.y*c}static tryAddKingAttackInDirection(e,t,i,s,n,o,r){let c=0,a=null;do o.add(r),++c,a=e.getCell(o);while(a===null||a===i);if(a===k||a.isWhite===i.isWhite||n.includes(a)){o.x-=r.x*c,o.y-=r.y*c;return}o.add(r),++c;const S=e.getCell(o);if(S===null||S===i){n.push(a);const P=o.clone();P.x-=r.x*c,P.y-=r.y*c,s.push(P),this.addKingAttackMovesRec(e,t,i,s,n,o,r),s.pop(),n.pop()}o.x-=r.x*c,o.y-=r.y*c}static addKingAttackMoves(e,t,i){const s=[],n=i.pos,o=[n.clone()];for(const r of this.cardinalDirections){let c=null,a=0;do++a,n.add(r),c=e.getCell(n);while(c===null);if(c===k||c.isWhite===i.isWhite){n.x-=r.x*a,n.y-=r.y*a;continue}if(++a,n.add(r),e.getCell(n)!==null){n.x-=r.x*a,n.y-=r.y*a;continue}s.push(c),this.addKingAttackMovesRec(e,t,i,o,s,n,r),s.pop(),n.x-=r.x*a,n.y-=r.y*a}}static calculateAttackMoves(e,t){const i=[];return t.isPromoted?this.addKingAttackMoves(e,i,t):this.addPawnAttackMoves(e,i,t),i.length===0?null:i}static pawnHasAttackMoves(e,t){for(const i of this.cardinalDirections){const s=t.pos.clone();s.add(i);const n=e.getCell(s);s.add(i);const o=e.getCell(s);if(n!==k&&n!==null&&n.isWhite!==t.isWhite&&o===null)return!0}return!1}static kingHasAttackMoves(e,t){for(const i of this.cardinalDirections){const s=t.pos.clone();let n=null;do s.add(i),n=e.getCell(s);while(n===null);s.add(i);const o=e.getCell(s);if(n!==k&&n!==null&&n.isWhite!==t.isWhite&&o===null)return!0}return!1}static hasAttackMoves(e,t){return t.isPromoted?this.kingHasAttackMoves(e,t):this.pawnHasAttackMoves(e,t)}}l(W,"cardinalDirections",[new u(0,1),new u(1,0),new u(0,-1),new u(-1,0)]),l(W,"allDirections",[new u(0,1),new u(1,0),new u(0,-1),new u(-1,0),new u(-1,1),new u(1,1),new u(1,-1),new u(-1,-1)]);class G{constructor(){l(this,"_board");this._board=[],this._board=new Array(w.CellsPerSide);for(let e=0;e<w.CellsPerSide;++e)this._board[e]=new Array(w.CellsPerSide);this.clearBoard()}static fillRow(e,t,i,s){const n=w.CellsPerSide;for(let o=(n-i)/2;o<n/2+i/2;++o){const r=new v(s,new u(o,t));e[o]=r}}isClear(){for(const e of this._board)for(const t of e)if(t!==null)return!1;return!0}fillStandardBoard(){if(!this.isClear())throw new Error("Board is not clear");const e=this._board;for(let t=0;t<3;++t)G.fillRow(e[t],t,w.CellsPerSide-t*2,!1);for(let t=0;t<3;++t)G.fillRow(e[e.length-t-1],e.length-t-1,w.CellsPerSide-t*2,!0)}fillBoard(e){for(const t of e){if(this._board[t.pos.y][t.pos.x]!==null)throw new Error(`Cell at ${t.pos} already occupied`);this._board[t.pos.y][t.pos.x]=t}}clearBoard(){for(let e=0;e<this._board.length;++e){const t=this._board[e];for(let i=0;i<t.length;++i)t[i]=null}}reset(){this.clearBoard(),this.fillStandardBoard()}getCell(e,t){const i=w.CellsPerSide;let s=0;return t===void 0?(s=e.x,t=e.y):s=e,s<0||s>=i||t<0||t>=i?k:this._board[t][s]}movePiece(e,t,i=!1){v.checkCoordinate(e.x,"fromX"),v.checkCoordinate(e.y,"fromY"),v.checkCoordinate(t.x,"toX"),v.checkCoordinate(t.y,"toY");const s=this._board[e.y][e.x];if(s===null)throw new Error(`Piece at ${e.x} ${e.y} not present`);const n=this._board[t.y][t.x];if(!i&&n!==null)throw new Error(`Cell at ${t.x} ${t.y} not empty`);this._board[e.y][e.x]=null,this._board[t.y][t.x]=s,s.moveTo(t)}removePiece(e){if(v.checkCoordinate(e.x,"fromX"),v.checkCoordinate(e.y,"fromY"),this._board[e.y][e.x]===null)throw new Error(`Cell at ${e.x} ${e.y} empty`);this._board[e.y][e.x]=null}addPiece(e){if(this._board[e.pos.y][e.pos.x]!==null)throw new Error("Cell at "+e.pos+" already occupied");this._board[e.pos.y][e.pos.x]=e}get data(){return this._board}get dataView(){return this._board}}class F{constructor(){l(this,"_handlers",[])}subscribe(e){this._handlers.push(e)}raise(e){for(const t of this._handlers)t(e)}}class J{constructor(e,t,i,s){this.from=e,this.to=t,this.removed=i,this.promotion=s}toJson(){var e;return{from:this.from.toJson(),to:this.to.toJson(),removed:((e=this.removed)==null?void 0:e.map(t=>t.toJson()))??void 0,promotion:this.promotion}}static fromJson(e){var t;return new J(u.fromJson(e.from),u.fromJson(e.to),((t=e.removed)==null?void 0:t.map(i=>v.fromJson(i)))??null,e.promotion)}}class N{constructor(e=null){l(this,"_board");l(this,"_pieces",[]);l(this,"_moveRecords",[]);l(this,"_currentPlayer");l(this,"_moveInfos",[]);l(this,"_eventSubject",new F);this._board=new G,e===null?(this._currentPlayer=x.White,this._board.fillStandardBoard(),this.resetPieces()):(this._currentPlayer=e.currentPlayer,this._moveRecords=e.moveRecords.map(t=>J.fromJson(t)),this.fillPiecesFromJson(e.pieces),this._board.fillBoard(this._pieces)),this.calculateMoves()}calculatePieceMoves(e,t,i){let s=null;i?s=W.calculateAttackMoves(e,t):s=W.calculateMoves(e,t),s!==null&&this._moveInfos.push(new ce(t,s))}calculateMoves(){this._moveInfos.length=0;const e=this._currentPlayer===x.White;let t=!1;for(const i of this._pieces)if(i.isWhite===e&&W.hasAttackMoves(this._board,i)){t=!0;break}for(const i of this._pieces)i.isWhite===e&&(t&&!W.hasAttackMoves(this._board,i)||this.calculatePieceMoves(this._board,i,t));t&&this.filterAttackMoves()}filterAttackMoves(){let e=1;for(const t of this._moveInfos)for(const i of t.moves)e=Math.max(e,i.toRemove.length);for(const t of this._moveInfos)t.moves=t.moves.filter(i=>i.toRemove.length===e);this._moveInfos=this._moveInfos.filter(t=>t.moves.length!==0)}resetPieces(){this._pieces.length=0;const e=this._board.data;for(const t of e)for(const i of t)i!==null&&this._pieces.push(i)}resetMoveRecords(){this._moveRecords.length=0}fillPiecesFromJson(e){this._pieces=e.map(t=>v.fromJson(t))}swapPlayer(){this._currentPlayer=this._currentPlayer===x.Red?x.White:x.Red,this.onPlayerChanged()}get board(){return this._board}get pieces(){return this._pieces}get moves(){return this._moveInfos}get currentPlayer(){return this._currentPlayer}get canUndo(){return this._moveRecords.length!==0}fireInitialEvents(){this.onPlayerChanged(),this.onGameReset(),this.onPiecesChanged(),this.onCanUndoChanged(),this.tryDetectGameEnd()}findPieceMoves(e){for(const t of this._moveInfos)if(t.piece===e)return t.moves;return null}undoMove(){const e=this._moveRecords.pop();if(e===void 0)throw new Error("No moves to undo");const t=this._board.data[e.to.y][e.to.x];if(t===null)throw new Error("Piece to move not found when trying to undo move");if(this._board.movePiece(e.to,e.from),e.removed!==null){this._board.fillBoard(e.removed);for(const i of e.removed)this._pieces.push(i)}e.promotion&&t.demote(),this.swapPlayer(),this.calculateMoves(),this.onPiecesChanged(),this._moveRecords.length===0&&this.onCanUndoChanged()}performMove(e,t){const i=this._moveInfos.find(c=>c.piece===e);if(!i)throw new Error("Unable to find moves for piece "+e);const s=i.piece;if(!i.moves.includes(t))throw new Error(`The piece ${s} does not have the move ${t}`);this._board.movePiece(s.pos,t.lastPoint,t.isAttackMove);const o=s.shouldBePromoted;o&&s.promote();const r=new J(t.firstPoint,t.lastPoint,t.toRemove,o);if(this._moveRecords.push(r),t.toRemove!==null){const c=t.toRemove;for(const a of c)this._board.removePiece(a.pos);this._pieces=this._pieces.filter(a=>!c.includes(a))}this.swapPlayer(),this.calculateMoves(),this.onPiecesChanged(),this._moveRecords.length===1&&this.onCanUndoChanged(),this.tryDetectGameEnd()}tryDetectGameEnd(){const e=this._pieces.some(s=>!s.isWhite),t=this._pieces.some(s=>s.isWhite);if(!e||!t){this.onGameEnd(e);return}this._moveInfos.length!==0||this.onGameEnd(null)}reset(){this._currentPlayer=x.White,this._board.reset(),this.resetMoveRecords(),this.resetPieces(),this.calculateMoves(),this.onPlayerChanged(),this.onGameReset(),this.onPiecesChanged(),this.onCanUndoChanged()}registerEventHandler(e){this._eventSubject.subscribe(e)}get state(){return{pieces:this._pieces.map(e=>e.toJson()),moveRecords:this._moveRecords.map(e=>e.toJson()),currentPlayer:this._currentPlayer}}raiseEvent(e){this._eventSubject.raise(e)}onPiecesChanged(){this.raiseEvent(new le)}onGameReset(){this.raiseEvent(new ne)}onGameEnd(e){this.raiseEvent(new ae(e))}onPlayerChanged(){this.raiseEvent(new oe(this._currentPlayer))}onCanUndoChanged(){this.raiseEvent(new re(this.canUndo))}}const B=class B{static getPlayerString(e){switch(e){case x.Red:return"Red Player";case x.White:return"White Player";default:throw new Error("Unknown player type "+e)}}static updateIndicator(e){this.indicator.textContent=B.getPlayerString(e)}static handleGameEvent(e){e.isPlayerChangedEvent()&&B.updateIndicator(e.player)}static registerEventHandler(e){e.registerEventHandler(B.handleGameEvent)}};l(B,"indicator",y.findById(h.playerIndicator));let K=B;const L=class L{static clickOutsideDialogListener(e){return t=>{t.target===e&&e.close("cancel")}}static openEndDialog(e){return this.endDialog.children[0].textContent=e,this.endDialog.showModal(),document.activeElement instanceof HTMLElement&&document.activeElement.blur(),new Promise(t=>{this.endDialog.addEventListener("close",()=>{t(this.endDialog.returnValue==="default")},{once:!0})})}static openRestartDialog(){return this.restartDialog.showModal(),document.activeElement instanceof HTMLElement&&document.activeElement.blur(),new Promise(e=>{this.restartDialog.addEventListener("close",()=>{e(this.restartDialog.returnValue==="default")},{once:!0})})}static openSettingsDialog(){return this.settingsDialog.showModal(),new Promise(e=>{this.settingsDialog.addEventListener("close",()=>{e(this.settingsDialog.returnValue==="default")},{once:!0})})}static toggleDropdownDialog(){if(this.dropdownDialog.open){this.dropdownDialog.close();return}this.dropdownDialog.show(),document.activeElement instanceof HTMLElement&&document.activeElement.blur()}static closeDropdownDialog(){this.dropdownDialog.close()}};l(L,"restartDialog",y.findById(h.restartDialog)),l(L,"dropdownDialog",y.findById(h.dropdownDialog)),l(L,"settingsDialog",y.findById(h.settingsDialog)),l(L,"endDialog",y.findById(h.endDialog)),(()=>{for(const e of document.getElementsByClassName("modal-dialog")){const t=e;t.addEventListener("click",L.clickOutsideDialogListener(t))}})();let D=L;class de{static toggle(){document.fullscreenEnabled&&(document.fullscreenElement===null?document.documentElement.requestFullscreen():document.exitFullscreen())}}class he{constructor(e,t,i,s){l(this,"_game");l(this,"_settings");l(this,"_inputState");l(this,"_appStateSaver");l(this,"_container",y.findById(h.gameContainer));l(this,"_undoButton",y.findById(h.undoButton));l(this,"_cycleButton",y.findById(h.cycleButton));l(this,"_dropdownButton",y.findById(h.dropdownButton));l(this,"_dropdownDialog",y.findById(h.dropdownDialog));l(this,"_pieceToMove",null);l(this,"_moveToPerform",null);this._game=e,this._inputState=t,this._appStateSaver=i,this._settings=s,this.registerHandlers()}registerHandlers(){this._container.addEventListener("click",e=>this.handleClick(e),!0),this._undoButton.addEventListener("click",()=>this.handleUndoClick()),this._cycleButton.addEventListener("click",()=>{this.handleCycleClick()}),document.addEventListener("click",e=>{this.outsideDropdownClickListener(e)}),this._dropdownButton.addEventListener("click",()=>this.toggleDropdown()),this._dropdownDialog.addEventListener("click",e=>this.handleDropdownClick(e)),this._inputState.subscribeAcceptingInput(e=>this.onAcceptingInputChanged(e)),this._game.registerEventHandler(e=>this.handleGameEvent(e))}onAcceptingInputChanged(e){if(e){if(this._pieceToMove===null)throw new Error("_pieceToMove not supposed to be null");if(this._moveToPerform===null)throw new Error("_moveToPerform not supposed to be null");this._game.performMove(this._pieceToMove,this._moveToPerform),this._pieceToMove=null,this._moveToPerform=null}}startMove(e,t){if(this._pieceToMove!==null)throw new Error("_pieceToMove is supposed to be null");if(this._moveToPerform!==null)throw new Error("_moveToPerform is supposed to be null");this._pieceToMove=e,this._moveToPerform=t,this._inputState.raisePerformMove(e,t)}tryMoveToCell(e,t,i){const s=this._inputState.selection.moves;if(s===null)return!1;let n=null;const o=this._inputState.selection;if(o.selectedMoveIndex!==null){if(n=s[o.selectedMoveIndex],n.lastPoint.x!==t||n.lastPoint.y!==i)return!1}else if(n=s.find(r=>{const c=r.lastPoint;return c.x===t&&c.y===i})??null,n===null)return!1;return this.startMove(e,n),!0}outsideDropdownClickListener(e){const t=e.target;this._dropdownDialog.open&&t.closest(`#${h.dropdownDialog}`)===null&&t.closest(`#${h.dropdownButton}`)===null&&D.closeDropdownDialog()}handleDropdownClick(e){const t=e.target;if(t.tagName==="BUTTON"){switch(t.dataset.id){case"save":this.handleSaveClick();break;case"settings":this.handleSettingsClick();break;case"fullscreen":de.toggle();break;case"restart":this.handleResetClick();break}D.closeDropdownDialog()}}handleCellClick(e,t){if(!this._inputState.acceptingInput)return;const i=this._game.board.dataView[t][e],s=this._inputState.selectedPiece;if(s!==null&&this.tryMoveToCell(s,e,t)||s===i)return;let n=null;if(i!==null&&(n=this._game.findPieceMoves(i),n===null)){s!==null&&this._inputState.deselectPiece();return}this._inputState.setSelection(i,n,null)}handleClick(e){if(!this._inputState.acceptingInput)return;const t=e.offsetX/this._container.clientWidth*w.CellsPerSide,i=e.offsetY/this._container.clientHeight*w.CellsPerSide,s=t|0,n=i|0;this.handleCellClick(s,n)}handleUndoClick(){this._inputState.acceptingInput&&this._game.undoMove()}handleCycleClick(){if(!this._inputState.acceptingInput)return;const e=this._inputState.selection;if(e.moves===null||e.moves.length<=1)return;let t=0;e.selectedMoveIndex!==null&&(t=(e.selectedMoveIndex+1)%e.moves.length),this._inputState.setSelectionindex(t)}async handleResetClick(){if(!this._inputState.acceptingInput)return;await D.openRestartDialog()&&(this._game.reset(),this._inputState.deselectPiece())}async handleSettingsClick(){if(!await D.openSettingsDialog()){this._settings.resetInputs();return}this._settings.saveSettings()}handleSaveClick(){this._appStateSaver.save()}toggleDropdown(){D.toggleDropdownDialog()}handleGameEvent(e){e.isGameResetEvent()&&this._inputState.deselectPiece(),e.isPiecesChangedEvent()&&this._inputState.deselectPiece()}}const E=class E{constructor(e,t){l(this,"_cellContext",y.findById(h.cellCanvas).getContext("2d"));l(this,"_game");this._game=e,t.subscribeToSelectionChanges(i=>this.render(i)),this.render(t.selection)}static getCardinalDirection(e,t){return e.x<t.x?this.cardinalDirections[1]:e.y<t.y?this.cardinalDirections[0]:e.x>t.x?this.cardinalDirections[3]:this.cardinalDirections[2]}renderSelectedPiece(e){const t=this._cellContext,i=f.CellSize;t.fillStyle=g.SelectedCell,t.fillRect(e.pos.x*i,e.pos.y*i,i,i)}renderSimpleMovesForPiece(e){const t=this._cellContext,i=f.CellSize;t.fillStyle=g.ReachableCell;for(const s of e){const n=s.lastPoint;t.fillRect(n.x*i,n.y*i,i,i)}}renderSelectablePieces(e){const t=this._cellContext,i=f.CellSize;t.fillStyle=g.SelectableCell;for(const s of this._game.moves){const n=s.piece;n!==e&&t.fillRect(n.pos.x*i,n.pos.y*i,i,i)}}static renderAttackMoveBegin(e,t){const i=f.CellSize,s=t.firstPoint.clone(),n=t.path[1],o=E.getCardinalDirection(s,n);do s.add(o),e.fillRect(s.x*i,s.y*i,i,i);while(!s.equals(n))}static renderAttackMoveFull(e,t){const i=f.CellSize,s=new u;for(let n=1;n<t.path.length-1;++n){s.x=t.path[n].x,s.y=t.path[n].y;const o=t.path[n+1],r=E.getCardinalDirection(s,o);do e.fillRect(s.x*i,s.y*i,i,i),s.add(r);while(!s.equals(o))}}renderAttackMovesForPiece(e){const t=this._cellContext,i=f.CellSize;t.fillStyle=g.SelectedCell;const s=e[0].firstPoint.clone();t.fillRect(s.x*i,s.y*i,i,i),t.fillStyle=g.PassedThroughCell;for(const n of e)E.renderAttackMoveBegin(t,n),E.renderAttackMoveFull(t,n);t.fillStyle=g.ReachableCell;for(const n of e){const o=n.lastPoint;t.fillRect(o.x*i,o.y*i,i,i)}}renderAttackMove(e){const t=this._cellContext,i=f.CellSize;t.fillStyle=g.SelectedCell;const s=e.firstPoint.clone();t.fillRect(s.x*i,s.y*i,i,i),t.fillStyle=g.PassedThroughCell,E.renderAttackMoveBegin(t,e),E.renderAttackMoveFull(t,e),t.fillStyle=g.ReachableCell;const n=e.lastPoint;t.fillRect(n.x*i,n.y*i,i,i)}render(e){const t=this._cellContext,i=f.BoardSize;t.clearRect(0,0,i,i);const s=e.selectedPiece!==null,n=e.moves!==null&&e.moves[0].isAttackMove,o=e.selectedMoveIndex!==null;if(this.renderSelectablePieces(e.selectedPiece),n){o?this.renderAttackMove(e.moves[e.selectedMoveIndex]):this.renderAttackMovesForPiece(e.moves);return}s&&(this.renderSelectedPiece(e.selectedPiece),this.renderSimpleMovesForPiece(e.moves))}};l(E,"cardinalDirections",[new u(0,1),new u(1,0),new u(0,-1),new u(-1,0)]);let q=E;class ue{constructor(e,t,i){this.selectedPiece=e,this.moves=t,this.selectedMoveIndex=i}get canCycle(){return this.selectedPiece!==null&&this.moves!==null&&this.moves.length>1&&this.moves[0].isAttackMove}}class ge{constructor(){l(this,"_selection",new ue(null,null,null));l(this,"_acceptingInput",!0);l(this,"_selectionChangedSubject",new F);l(this,"_acceptingInputSubject",new F);l(this,"_performMoveSubject",new F)}get selectedPiece(){return this._selection.selectedPiece}get selection(){return this._selection}setSelection(e,t,i){this._selection.selectedPiece=e,this._selection.moves=t,this._selection.selectedMoveIndex=i,this.raisePieceChange()}setSelectionindex(e){this._selection.selectedMoveIndex=e,this.raisePieceChange()}deselectPiece(){this.setSelection(null,null,null)}get acceptingInput(){return this._acceptingInput}set acceptingInput(e){this._acceptingInput=e,this.raiseAcceptingInput()}raisePieceChange(){this._selectionChangedSubject.raise(this._selection)}raiseAcceptingInput(){this._acceptingInputSubject.raise(this._acceptingInput)}raisePerformMove(e,t){this._performMoveSubject.raise([e,t])}subscribeToSelectionChanges(e){this._selectionChangedSubject.subscribe(e)}subscribeAcceptingInput(e){this._acceptingInputSubject.subscribe(e)}subscribePerformMove(e){this._performMoveSubject.subscribe(e)}}const b=class b{static async tryStayAwake(){if(!("wakeLock"in navigator)){console.warn("WakeLock not supported");return}b.tryAcquireWakeLock()}static async tryAcquireWakeLock(){if(!(b._wakeLock!==null||document.visibilityState==="hidden")){try{b._wakeLock=await navigator.wakeLock.request("screen")}catch(e){const t=e;console.error(`Failed to request WakeLock
Error: ${t.name}
${t.message}`);return}b._wakeLock.onrelease=()=>{b._wakeLock!==null&&(b._wakeLock=null),b.tryAcquireWakeLock()}}}};l(b,"_wakeLock",null);let $=b;class U{constructor(e,t){l(this,"header",y.findById(h.gameHeader));t.subscribeAcceptingInput(i=>this.setMoving(!i)),t.subscribeToSelectionChanges(i=>this.onSelectionChange(i)),e.registerEventHandler(i=>this.onGameEvent(i)),this.registerHeaderButtonHandlers()}registerHeaderButtonHandlers(){for(const e of document.getElementsByClassName("header-button")){const t=e;t.addEventListener("transitionend",U.onTransitionEnd),t.addEventListener("click",U.onHeaderButtonClicked)}}static onTransitionEnd(e){e.currentTarget.classList.remove("mobile-active")}static onHeaderButtonClicked(e){e.currentTarget.classList.add("mobile-active")}onGameEvent(e){e.isCanUndoEvent()&&this.setCanUndo(e.canUndo)}setHeaderClass(e,t){t?this.header.classList.add(e):this.header.classList.remove(e)}onSelectionChange(e){this.setCycling(e.canCycle)}setCycling(e){this.setHeaderClass("cycling",e)}setCanUndo(e){this.setHeaderClass("can-undo",e)}setMoving(e){this.setHeaderClass("moving",e)}}class fe{static register(){document.addEventListener("visibilitychange",()=>{document.visibilityState==="visible"&&$.tryStayAwake()})}}const Z="app-state",V=1;class pe{loadState(){const e=localStorage.getItem(Z);if(e===null)return null;let t;try{t=JSON.parse(e)}catch{return console.warn("Failed to parse app state"),null}return(t==null?void 0:t.version)!==V?null:t}}class me{constructor(e){this.appStateGetter=e}startSaveTimer(){window.setInterval(()=>this.save(),1e3*60*2)}save(){console.log("Saving");const e=this.appStateGetter();localStorage.setItem(Z,JSON.stringify(e))}}class ve{constructor(e){l(this,"_settingsForm",y.findById(h.settingsForm));l(this,"_game");l(this,"_settings",{});this._game=e}get current(){return this._settings}load(){const e=localStorage.getItem("settings");if(e===null)return;let t;try{t=JSON.parse(e)}catch{console.warn("Failed to parse settings");return}this._settings=t}saveSettings(){const e=new FormData(this._settingsForm),t=Object.fromEntries(e.entries()),i={};i.swapHeaderPosition=t.swapHeaderPosition==="on",i.flipRedPieces=t.flipRedPieces==="on",this._settings=i,localStorage.setItem("settings",JSON.stringify(i)),this.applyCurrentSettings()}resetInputs(){const e=this._settingsForm.elements,t=e.namedItem("swapHeaderPosition");t.checked=this._settings.swapHeaderPosition??!1;const i=e.namedItem("flipRedPieces");i.checked=this._settings.flipRedPieces??!1}setClass(e,t,i){i?e.classList.add(t):e.classList.remove(t)}applyCurrentSettingsInitial(){this.setClass(document.body,"swap-header",this._settings.swapHeaderPosition??!1)}applyCurrentSettings(){this.applyCurrentSettingsInitial(),this._game.onPiecesChanged()}}class O{static handleGameEvent(e){e.isPlayerChangedEvent()&&O.onPlayerChanged(e.player===x.Red)}static onPlayerChanged(e){e?(document.body.classList.remove("white-player"),document.body.classList.add("red-player")):(document.body.classList.add("white-player"),document.body.classList.remove("red-player"))}static registerEventHandler(e){e.registerEventHandler(O.handleGameEvent)}}class Pe{constructor(e,t){l(this,"_game");l(this,"_inputState");this._game=e,this._inputState=t,e.registerEventHandler(i=>this.handleGameEvent(i))}async onGameEnd(e){let t;switch(e){case!0:t="The red player has won";break;case!1:t="The white player has won";break;default:t="Draw"}await D.openEndDialog(t)&&(this._game.reset(),this._inputState.deselectPiece())}handleGameEvent(e){e.isGameEndEvent()&&this.onGameEnd(e.redWon)}}let R,C;const we=new pe,X=new me(_e);function ye(d){K.registerEventHandler(d),O.registerEventHandler(d),I.registerEventHandler(d),window.addEventListener("beforeunload",()=>{X.save()})}function Se(){"serviceWorker"in navigator&&navigator.serviceWorker.register("./serviceWorker.js").then(()=>{console.log("Service worker registered")}).catch(t=>{console.log("Service worker registration failed: "+t)}),fe.register(),$.tryStayAwake();let d=we.loadState();try{C=new N((d==null?void 0:d.gameState)??null)}catch{console.error("Failed to initialize game from saved state"),C=new N(null),d=null}d!==null&&I.setElapsedTime(d.elapsedTime);const e=new ge;R=new ve(C),R.load(),R.resetInputs(),R.applyCurrentSettingsInitial(),new Pe(C,e),new Y(C,e,R),new he(C,e,X,R),new U(C,e),new q(C,e),ye(C),C.fireInitialEvents(),X.startSaveTimer()}function _e(){return{version:V,gameState:C.state,elapsedTime:C.canUndo?I.getElapsedTime():0}}Se();
